"""Creation of Users and Roles

Revision ID: cc286322c41c
Revises:
Create Date: 2022-08-29 12:12:33.508710
"""
import sqlalchemy as sa
from alembic import op
from datetime import datetime, timezone

# revision identifiers, used by Alembic.
revision = 'cc286322c41c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    roles_table = op.create_table(
        'roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('value', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.Column('label', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=False),
    )

    users_table = op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('full_name', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('password', sa.String(), nullable=True),
        sa.Column('validated', sa.Boolean(), nullable=False),
        sa.Column('blocked', sa.Boolean(), nullable=False),
        sa.Column('first_access', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
    )
    roles_users_table = op.create_table(
        'user_roles',
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('role_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['role_id'],
            ['roles.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ),
    )

    op.bulk_insert(
        roles_table,
        [
            {
                'value': 'ADMIN',
                'created_at': datetime.now(timezone.utc),
                'updated_at': datetime.now(timezone.utc),
                'description': 'Major permission.',
                'label': 'Admin',
            },
            {
                'value': 'USER',
                'created_at': datetime.now(timezone.utc),
                'updated_at': datetime.now(timezone.utc),
                'description': 'Basic role. Restricted access',
                'label': 'User',
            },
            {
                'value': '1',
                'created_at': datetime.now(timezone.utc),
                'updated_at': datetime.now(timezone.utc),
                'description': 'Major permission. Main company creation access',
                'label': 'Master',
            },
        ],
    )

    op.bulk_insert(
        users_table,
        [
            {
                'full_name': 'admin user',
                'email': 'admin@email.com',
                'password': 'e10adc3949ba59abbe56e057f20f883e',  # 123456
                'validated': True,
                'blocked': False,
                'created_at': datetime.now(timezone.utc),
                'updated_at': datetime.now(timezone.utc),
                'token_reset_password': None,
                'first_access': True,
            },
            {
                'full_name': 'employee user',
                'email': 'user@email.com',
                'password': 'e10adc3949ba59abbe56e057f20f883e',  # 123456
                'validated': False,
                'blocked': False,
                'created_at': datetime.now(timezone.utc),
                'updated_at': datetime.now(timezone.utc),
                'token_reset_password': None,
                'first_access': True,
            },
        ],
    )

    op.bulk_insert(
        roles_users_table,
        [
            {
                'user_id': 1,
                'role_id': 1,
            },
            {
                'user_id': 2,
                'role_id': 2,
            },
        ],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
